datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      String   // 'student' or 'instructor'
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  courses   Course[] // One-to-many relation to courses (instructor)
  enrollments Enrollment[] // One-to-many relation to enrollments (student)
}

model Course {
  id          Int        @id @default(autoincrement())
  title       String
  description String
  category    String
  videoUrl    String
  instructor  User       @relation(fields: [instructorId], references: [id])
  instructorId Int
  sessions    Session[]  // One-to-many relation to sessions
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  enrollments Enrollment[] // One-to-many relation to enrollments
}

model Session {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  videoUrl    String
  course      Course   @relation(fields: [courseId], references: [id])
  courseId    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  progress    Progress[] // One-to-many relation to progress
}

model Enrollment {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  course      Course   @relation(fields: [courseId], references: [id])
  courseId    Int
  enrolledAt  DateTime @default(now())
  status      String   // 'enrolled', 'completed', 'dropped'
  progress    Progress[] // One-to-many relation to progress
}

model Progress {
  id          Int      @id @default(autoincrement())
  enrollment  Enrollment @relation(fields: [enrollmentId], references: [id])
  enrollmentId Int
  session     Session   @relation(fields: [sessionId], references: [id])
  sessionId   Int
  isCompleted Boolean  @default(false) // Marks if the session is completed
  completionDate DateTime? // Optional, only set if session is marked complete
}
